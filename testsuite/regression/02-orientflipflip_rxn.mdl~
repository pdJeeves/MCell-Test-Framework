/****************************************************************************
 * Regression test 02: In a grid mol + vol mol reaction V' + G' -> V, + G,
 *    (i.e. where both molecules are preserved and change orientation), the
 *    updated orientation of the grid molecule is not counted.
 *
 *    Failure: a_inner != b_outward or a_outer != b_inward
 *
 *    Success: a_inner == b_outward && a_outer == b_inward
 *             a_inner + a_outer == a_total == 1000
 *             b_inward + b_outward == b_total == 1000
 *
 * Author: Jed Wing <jed@salk.edu>
 * Date:   2008-09-05
 ****************************************************************************/

basename = "02-orientflipflip_rxn"
countdir = "dat/" & basename & "/"
vizdir   = "./viz_dat/" & basename & "/"
ITERATIONS = 1000
TIME_STEP = 1e-6

DEFINE_MOLECULES
{
  a { DIFFUSION_CONSTANT_3D = 2e-6 }
  b { DIFFUSION_CONSTANT_2D = 0 }
}

DEFINE_REACTIONS
{
  a' + b' -> a, + b,    [3e6]
}

INSTANTIATE world OBJECT
{
  box_outer BOX
  {
    CORNERS = [-0.25, -0.25, -0.25], [0.25, 0.25, 0.25]
  }
  box_inner BOX
  {
    CORNERS = [-0.24, -0.24, -0.24], [0.24, 0.24, 0.24]
    DEFINE_SURFACE_REGIONS
    {
      all {
        INCLUDE_ELEMENTS = [ ALL_ELEMENTS ]
        MOLECULE_NUMBER { b, = 1000 }
      }
    }
  }
  rs1 RELEASE_SITE
  {
    SHAPE = SPHERICAL
    SITE_RADIUS = 0
    LOCATION = [0, 0, 0]
    MOLECULE = a
    NUMBER_TO_RELEASE = 1000
  }
}

REACTION_DATA_OUTPUT
{
  OUTPUT_BUFFER_SIZE = 100
  STEP = 1e-5
  HEADER = "# "
  {
    COUNT[a, world.box_inner]                             : "a_inner",
    COUNT[a, world.box_outer] - COUNT[a, world.box_inner] : "a_outer",
    COUNT[a, WORLD]                                       : "a_total",
    COUNT[b{1},  world.box_inner]                         : "b_inward",
    COUNT[b{-1}, world.box_inner]                         : "b_outward",
    COUNT[b, WORLD]                                       : "b_total"
  } => countdir & "counts.txt"
}

VIZ_OUTPUT
{
  MODE = DREAMM_V3_GROUPED
   FILENAME = "world"
   MOLECULES
   {
     NAME_LIST { ALL_MOLECULES }
     TIME_POINTS { ALL_DATA @ [0, 1] }
   }
  MESHES
  {
    NAME_LIST { ALL_MESHES }
    TIME_POINTS { ALL_DATA @ [0] }
  }

}
